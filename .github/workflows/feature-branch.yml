# ----------------------------------------------------------------------------
# Feature Branch Workflow con validación de commits
# Este workflow valida los commits en ramas temporales y hace merge automático a develop.
#FALTA GESTIÓN DE CONFLICTOS
# ----------------------------------------------------------------------------

name: Feature Branch Workflow

on:
  push:
    branches:
      - 'feature/*'
      - 'fix/*'
      - 'test/*'
      - 'docs/*'

jobs:
  validate-commits:
    name: Validate Commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate commit messages
        run: |
          # Obtener la rama actual
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "You are in this branch: $BRANCH_NAME"

          # Obtener commits desde la última versión de develop
          git fetch origin develop
          commits=$(git log origin/develop..HEAD --oneline)
          echo "Commits to validate:"
          echo "$commits"

          if [ -z "$commits" ]; then
            echo "No new commits to validate."
            exit 0
          fi

          # Validar cada commit
          while IFS= read -r commit; do
            mensaje=$(echo "$commit" | awk '{$1=""; print $0}' | xargs)
            
            if ! echo "$mensaje" | grep -Eq '^(feat|fix|test)\([a-zA-Z0-9._-]+\):\ .+'; then
              echo "Invalid commit message: '$mensaje'"
              exit 1
            fi
          done <<< "$commits"

          echo "All commit messages are valid."

  merge-to-develop:
    name: Merge to Develop
    runs-on: ubuntu-latest
    needs: validate-commits
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "AutoMerge Bot"
          git config user.email "bot@repo.local"

      - name: Merge branch to develop
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Merging $BRANCH_NAME → develop"

          git fetch origin develop
          git checkout develop
          git merge --no-ff "$BRANCH_NAME" -m "Merge $BRANCH_NAME into develop"
          git push origin develop
          echo "Merge completed."

  cleanup:
    name: Delete Temporary Branch
    runs-on: ubuntu-latest
    needs: merge-to-develop
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete remote branch
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          git push origin --delete "$BRANCH_NAME" || true
          echo "Branch deleted."
